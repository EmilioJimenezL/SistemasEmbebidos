/*------------------------------------------------------------------------------
 * This code was generated by Spiral Multiplier Block Generator, www.spiral.net
 * Copyright (c) 2006, Carnegie Mellon University
 * All rights reserved.
 * The code is distributed under a BSD style license
 * (see http://www.opensource.org/licenses/bsd-license.php)
 *------------------------------------------------------------------------------ */

module scm_2_66 ( 
	input wire clk, rst,
	input wire signed [31:0]X,
	output reg signed [31:0]Y
 
);


  //Multipliers:

  reg signed [51:0]
    w1,
    w131072,
    w131073,
    w1048576,
    w917503,
    w2048,
    w915455,
    w16,
    w915439,
    w16384,
    w931823,
    w256,
    w932079,
    w3728316,
    w2796237;
	
	
	always @(posedge clk or posedge rst)begin 
		if (rst) begin
			Y = 32'b0;
		end else begin 
		 assign w1 = X;
		  assign w131072 = w1 << 17;
		  assign w131073 = w1 + w131072;
		  assign w1048576 = w1 << 20;
		  assign w917503 = w1048576 - w131073;
		  assign w2048 = w1 << 11;
		  assign w915455 = w917503 - w2048;
		  assign w16 = w1 << 4;
		  assign w915439 = w915455 - w16;
		  assign w16384 = w1 << 14;
		  assign w931823 = w915439 + w16384;
		  assign w256 = w1 << 8;
		  assign w932079 = w931823 + w256;
		  assign w3728316 = w932079 << 2;
		  assign w2796237 = w3728316 - w932079;
		
		  assign Y = w2796237[51:20];
  	end		   
end


endmodule //multiplier_block

